!function(n,e){"function"==typeof define&&define.amd?define(e):"object"==typeof exports?module.exports=e():n.MicroPlugin=e()}(this,function(){var n={mixin:function(r){r.plugins={},r.prototype.initializePlugins=function(n){var e,i,t,r=this,o=[];if(r.plugins={names:[],settings:{},requested:{},loaded:{}},s.isArray(n))for(e=0,i=n.length;e<i;e++)"string"==typeof n[e]?o.push(n[e]):(r.plugins.settings[n[e].name]=n[e].options,o.push(n[e].name));else if(n)for(t in n)n.hasOwnProperty(t)&&(r.plugins.settings[t]=n[t],o.push(t));for(;o.length;)r.require(o.shift())},r.prototype.loadPlugin=function(n){var e=this,i=e.plugins,t=r.plugins[n];if(!r.plugins.hasOwnProperty(n))throw new Error('Unable to find "'+n+'" plugin');i.requested[n]=!0,i.loaded[n]=t.fn.apply(e,[e.plugins.settings[n]||{}]),i.names.push(n)},r.prototype.require=function(n){var e=this,i=e.plugins;if(!e.plugins.loaded.hasOwnProperty(n)){if(i.requested[n])throw new Error('Plugin has circular dependency ("'+n+'")');e.loadPlugin(n)}return i.loaded[n]},r.define=function(n,e){r.plugins[n]={name:n,fn:e}}}},s={isArray:Array.isArray||function(n){return"[object Array]"===Object.prototype.toString.call(n)}};return n});